---
interface Props {
	title: string;
	body: string;
	href: string;
}

const { href, title, body } = Astro.props;



---

<li class="link-card max-w-[400px] min-w-[250px] min-h-[200px] z-40">
	<a href={href} class="flex flex-col gap-1">
		<h2 class="font-bold">
			{title}
		</h2>
		<hr class="bg-black h-1"/>
		<p class="font-light text-left">
			{body}
		</p>
	</a>
</li>
<style>
	.link-card {
		list-style: none;
		display: flex;
		background-color: #ffffff;
		background-image: none;
		background-size: 400%;
		border-radius: 10px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: 0px 0px 5px rgba(0,0,0,0.3);
	}
	.link-card > hr {
		transition: background-color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: rgb(0, 0, 0);
		background-color: #ffffff;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.25rem;
		margin-bottom: 0;
	}
	.link-card:is(:hover, :focus-within) {
		box-shadow: 0 3px 10px rgba(0,0,0,0.3);
		transform: translateY(-1px) translateX(5px);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent));
	}
		.link-card:is(:hover, :focus-within) hr {
		background-color: rgb(var(--accent));
	}
</style>
